import math  
from Class_A_Star import A_Star,Node_Elem
  
#   Map
tm = [  
'############################################################',  
'#..........................................................#',  
'#..........................................................#',  
'#..........................................................#',  
'#.......##....................########################.....#',  
'#.......S#....#...............#......................#.....#',  
'#........#....#...............#......................#.....#',  
'#........#....#...............########################.....#',  
'#........#....#............................................#',  
'#........#....#............................................#',  
'#........#....#............................................#',  
'#........#....#............................................#',  
'#..........................................................#',  
'#######.#################################################..#',  
'#....#........#............................................#',  
'#....#........#............................................#',  
'#....##########............................................#',  
'#..........................................................#',  
'#..........................................................#',  
'#..........................................................#',  
'#..........................................................#',  
'#..........................................................#',  
'#...............................##############.............#',  
'#...............................#........E...#.............#',  
'#...............................#............#.............#',  
'#...............................#............#.............#',  
'#...............................#............#.............#',  
'#...............................###########..#.............#',  
'#..........................................................#',  
'#..........................................................#',  
'############################################################']  
  
test_map = []

def generate_tm(start_x, start_y, end_x, end_y, weight, height, pos_x = 0, pox_y = 0):
    line = ['.'] * height
    map = [line] * weight
    print map[start_x]
    map[start_x][start_y] = 'S'
    print map[end_x]
    map[end_x][end_y] = 'E'
    print map
    return map

#########################################################  
def print_map(test_map):  
    for line in test_map:
        print ''.join(line)  
  
def get_start_XY():  
    return get_symbol_XY('S')  
      
def get_end_XY():  
    return get_symbol_XY('E')  
      
def get_symbol_XY(s):  
    for y, line in enumerate(test_map):  
        try:  
            x = line.index(s)  
        except:  
            continue  
        else:  
            break  
    return x, y  
          
#########################################################  
def mark_path(l):  
    mark_symbol(l, '*')  
      
def mark_searched(l):  
    mark_symbol(l, ' ')  
      
def mark_symbol(l, s):  
    for x, y in l:  
        test_map[y][x] = s  
      
def mark_start_end(s_x, s_y, e_x, e_y):  
    test_map[s_y][s_x] = 'S'  
    test_map[e_y][e_x] = 'E'  
      
def tm_to_test_map():  
    for line in tm:  
        test_map.append(list(line))  
          
def find_path():  
    s_x, s_y = get_start_XY()  
    e_x, e_y = get_end_XY()  
    a_star = A_Star(s_x, s_y, e_x, e_y)  
    a_star.find_path()  
    searched = a_star.get_searched()  
    path = a_star.path  
    mark_searched(searched)
    mark_path(path)
    print "path length is %d"%(len(path))  
    print "searched squares count is %d"%(len(searched))  
    mark_start_end(s_x, s_y, e_x, e_y)
      
if __name__ == "__main__":  
    #tm_to_test_map()
    #find_path()  
    print_map(generate_tm(1,1,5,5,6,6))